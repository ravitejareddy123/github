name: CI/CD Pipeline with AI Agents

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE: myimage
  K8S_NAMESPACE: default
  DEPLOYMENT_NAME: microservice

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Build Agent
        run: python build_agent.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Report
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build_report.json

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Test Agent
        run: python test_agent.py

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test_report.json

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install KinD
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Create KinD Cluster
        run: kind create cluster --name demo-cluster --config kind-config.yaml

      - name: Load Docker Image into KinD
        run: kind load docker-image ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest --name demo-cluster

      - name: Run Deploy Agent
        run: python deploy_agent.py

      - name: Upload Deploy Report
        uses: actions/upload-artifact@v4
        with:
          name: deploy-report
          path: deploy_report.json

  train:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train Build Agent
        run: python train_agents.py build

      - name: Train Test Agent
        run: python train_agents.py test

      - name: Train Deploy Agent
        run: python train_agents.py deploy

      - name: Train Log Analyst Agent
        run: python train_agents.py log_analyst

  log-analysis:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move Artifacts to Root
        run: |
          mv artifacts/build-report/build_report.json .
          mv artifacts/test-report/test_report.json .
          mv artifacts/deploy-report/deploy_report.json .

      - name: Run Log Analysis
        run: python autogen_log_analysis.py

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            build_report.json
            test_report.json
            deploy_report.json
            log_analysis_report.html
            index.html

  deploy-pages:
    runs-on: ubuntu-latest
    needs: log-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Reports
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: .

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          keep_files: false
